import UIKit

// 1. Написать функцию, которая определяет, четное число или нет.
print("1. Написать функцию, которая определяет, четное число или нет.")

// функция isEven определяет является ли число четным. Если остаток от деления этого числа
// на 2 равен 0, число четное, иначе нечетное.
func isEven(number: Int) -> String {
    if number % 2 == 0 {
       return "Четное число"
    } else {
       return "Нечетное число"
    }
}

// Вывод функции isEven с числом, которое проверяется на четность
print(isEven(number: 4))
print()

// 2. Написать функцию, которая определяет, делится ли число без остатка на 3.
print("2. Написать функцию, которая определяет, делится ли число без остатка на 3.")

// функция remains определяет делится ли число без остатка на 3. Если остаток от деления этого числа на 3 равен 0, то число делится без остатка, иначе число не делится без остатка.
func remains(number: Int) -> String {
    if number % 3 == 0 {
        return "Число делится на 3 без остатка"
    } else {
        return "Число не делится на 3 без остатком"
    }
}

// Вывод функции remains с числом, которое проверяется делится ли оно на 3 без остатка.
print(remains(number: 36))
print()

//3. Создать возрастающий массив из 100 чисел.
print("3. Создать возрастающий массив из 100 чисел.")

// Создаем пустой массив и заполняем его элементами. Элемент массива равен его порядковому номеру.
var increasingArray = [Int]()
for i in 0...99 {
    increasingArray.append(i)
}

// Вывод всех элементов массива.
print("Возрастающий массив: \(increasingArray)")
print()

// 4. Удалить из этого массива все четные числа и все числа, которые не делятся на 3.
print("4. Удалить из этого массива все четные числа и все числа, которые не делятся на 3.")

// Проверяем элементы массива на четность и деление на 3 без остатка
for value in increasingArray {
    if (value % 2 == 0) || (value % 3 != 0){
        increasingArray.remove(at: increasingArray.index(of: value)!)
    }
}

// Вывод оставшихся элементов массива, удовлетворяющих условию.
print("Массив: \(increasingArray)")
print()

//*Написать функцию, которая добавляет в массив новое число Фибоначчи, и добавить при помощи нее
//100 элементов.
//Числа Фибоначчи определяются соотношениями Fn=Fn-1 + Fn-2.
print("5. Написать функцию, которая добавляет в массив новое число Фибоначчи, и добавить 100 элементов")

//Функция числа фибоначи по формуле Бине
func numberFibonachi(n:Int) -> Double {
     return (pow(((1 + sqrt(5)) / 2), Double(n)) - pow(((1 - sqrt(5)) / 2), Double(n))) / sqrt(5)
}

//Заполняем массив из 100 элементов
var fibonachiArray = [Double]()
for i in 0...99 {
    fibonachiArray.append(numberFibonachi(n: i))
}

// Вывод элементов массива
print("Массив: \(fibonachiArray)")
print()

//6. * Заполнить массив из 100 элементов различными простыми числами. Натуральное число, большее единицы,
//называется простым, если оно делится только на себя и на единицу. Для нахождения всех простых чисел не
//больше заданного числа n, следуя методу Эратосфена, нужно выполнить следующие шаги:
//a. Выписать подряд все целые числа от двух до n (2, 3, 4, ..., n).
//b. Пусть переменная p изначально равна двум — первому простому числу.
//c. Зачеркнуть в списке числа от 2p до n, считая шагами по p (это будут числа, кратные p: 2p, 3p, 4p, ...).
//d. Найти первое не зачёркнутое число в списке, большее, чем p, и присвоить значению переменной p это число.
//e. Повторять шаги c и d, пока возможно.

print("6. Заполнить массив из 100 элементов различными простыми числами.")

// Задаем размер массива n и начальное значение p = 2, первому простому числу
let n = 101
var p = 2

// Создаем пустой массив и заполняем его элементами от p до n.
var primeNumberArray = [Int]()
for i in p...n {
    primeNumberArray.append(i)
}

// Находим все простые числа в массиве. Проверяем кратен ли элемент массива текущему значению переменной p и
// удаляем все кратные в несколько раз элементы
for p in 2...n {
    for value in primeNumberArray {
        if (value % p == 0) && (value != p) {
            primeNumberArray.remove(at: primeNumberArray.index(of: value)!)
        }
    }
}

// Вывод полученного массива простых чисел
print("Массив простых чисел до заданного числа n: \(primeNumberArray)")
print()
